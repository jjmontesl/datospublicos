
---

!!python/object:cubetl.olap.AliasDimension
id: dp.pge.year
name: year_budget
label: Año
dimension: !ref cubetl.datetime.year

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.organism
name: organism
label: Organismo
attributes:
- { name: organism_code, label: Código Organismo }
- { name: organism_name, label: Organismo }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.section
name: section
label: Sección
attributes:
- { name: section_code, label: Código Sección }
- { name: section_name, label: Sección }

---

!!python/object:cubetl.olap.HierarchyDimension
id: dp.pge.organismsection
name: organismsection
label: Organismo
levels:
- !ref dp.pge.organism
- !ref dp.pge.section
hierarchies:
- name: organism
  label: Organismo
  levels: organism, section

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.program_group
name: program_group
label: Grupo
attributes:
- { name: program_group_code, label: Código Grupo }
- { name: program_group_name, label: Grupo }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.program_function
name: program_function
label: Función
attributes:
- { name: program_function_code, label: Código Función }
- { name: program_function_name, label: Función }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.program_program
name: program_program
label: Programa
attributes:
- { name: program_program_code, label: Código Programa }
- { name: program_program_name, label: Programa }

---

!!python/object:cubetl.olap.HierarchyDimension
id: dp.pge.program
name: program
label: Programa
levels:
- !ref dp.pge.program_group
- !ref dp.pge.program_function
- !ref dp.pge.program_program

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_expenseincome
name: concept_expenseincome
label: Ingreso/Gasto
attributes:
- { name: expenseincome_code, label: I/G }
- { name: expenseincome_name, label: Ingreso/Gasto }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_l1
name: concept_l1
label: Capítulo
attributes:
- { name: l1_code, label: Código }
- { name: l1_name, label: Capítulo }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_l2
name: concept_l2
label: Artículo
attributes:
- { name: l2_code, label: Código }
- { name: l2_name, label: Artículo }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_l2
name: concept_l2
label: Artículo
attributes:
- { name: l2_code, label: Código }
- { name: l2_name, label: Artículo }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_l3
name: concept_l3
label: Concepto
attributes:
- { name: l3_code, label: Código }
- { name: l3_name, label: Concepto }

---

!!python/object:cubetl.olap.Dimension
id: dp.pge.concept_l4
name: concept_l4
label: Subconcepto
attributes:
- { name: l4_code, label: Código }
- { name: l4_name, label: Subconcepto }

---

!!python/object:cubetl.olap.HierarchyDimension
id: dp.pge.concept
name: concept
label: Concepto
levels:
- !ref dp.pge.concept_expenseincome
- !ref dp.pge.concept_l1
- !ref dp.pge.concept_l2
- !ref dp.pge.concept_l3

---

!!python/object:cubetl.olap.Fact
id: dp.pge.budget
name: pge_budget
label: PGE / Presupuestos España
dimensions:
- !ref dp.pge.year
- !ref dp.pge.organismsection
- !ref dp.pge.program
- !ref dp.pge.concept
attributes:
- name: description
  type: String
- name: item
  type: String
measures:
- name: expense_total
  type: Integer
- name: expense_per_person
  type: Float
  aggregations: sum

---

!!python/object:cubetl.olap.OlapMapper
id: dp.pge.olapmapper
#include: dp.pge.autonomy.olapmapper
mappers:
- !!python/object:cubetl.olap.sql.EmbeddedDimensionMapper
  entity: !ref dp.pge.year
  mappings:
  - name: year
    value: ${ m['year_budget'] }
- !!python/object:cubetl.olap.sql.CompoundHierarchyDimensionMapper
  entity: !ref dp.pge.program
  table: pge_program
  connection: !ref dp.sql.connection
  mappings:
  - name: id
    value: ${ m['program_program_code'] }
    pk: True
    type: String
  - name: program_group_code
    value: ${ m["program_group_code"] }
  - name: program_group_name
    value: ${ m["program_group_name"] }
  - name: program_function_code
    value: ${ m["program_function_code"] }
  - name: program_function_name
    value: ${ m["program_function_name"] }
  - name: program_program_code
    value: ${ m["program_program_code"] }
  - name: program_program_name
    value: ${ m["program_program_name"] }
- !!python/object:cubetl.olap.sql.CompoundHierarchyDimensionMapper
  entity: !ref dp.pge.organismsection
  table: pge_organismsection
  connection: !ref dp.sql.connection
  mappings:
  - name: id
    value: ${ m['section_code'] }
    pk: True
    type: String
  - name: organism_code
    value: ${ m["organism_code"] }
  - name: organism_name
    value: ${ m["organism_name"] }
  - name: section_code
    value: ${ m["section_code"] }
  - name: section_name
    value: ${ m["section_name"] }
- !!python/object:cubetl.olap.sql.MultiTableHierarchyDimensionMapper
  entity: !ref dp.pge.concept
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref dp.pge.concept_expenseincome
  table: pge_concept_expenseincome
  lookup_cols: code
  connection: !ref dp.sql.connection
  mappings:
  - name: expenseincome_code
    pk: True
    column: code
    value: ${ m["expenseincome"] }
  - name: expenseincome_name
    column: name
    value: ${ m["expenseincome"] }
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref dp.pge.concept_l1
  table: pge_concept_l1_section
  connection: !ref dp.sql.connection
  lookup_cols: code
  mappings:
  - name: l1_code
    pk: True
    column: code
    value: ${ m["concept_l1_code"] }
  - name: l1_name
    column: name
    value: ${ m["concept_l1_name"] }
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref dp.pge.concept_l2
  table: pge_concept_l2_article
  connection: !ref dp.sql.connection
  lookup_cols: code
  mappings:
  - name: l2_code
    pk: True
    column: code
    value: ${ m["concept_l2_code"] }
  - name: l2_name
    column: name
    value: ${ m["concept_l2_name"] }
- !!python/object:cubetl.olap.sql.DimensionMapper
  entity: !ref dp.pge.concept_l3
  table: pge_concept_l3_concept
  connection: !ref dp.sql.connection
  lookup_cols: code
  mappings:
  - name: l3_code
    pk: True
    column: code
    value: ${ m["concept_l3_code"] }
  - name: l3_name
    column: name
    value: ${ m["concept_l3_name"] }
- !!python/object:cubetl.olap.sql.FactMapper
  entity: !ref dp.pge.budget
  table: pge_budget
  connection: !ref dp.sql.connection
  #lookup_cols: datemonthly_id, autonomy_id, province_id, genre_id, nationality_id, age_id
  store_mode: insert
  auto_store:
  - !ref dp.pge.organismsection
  - !ref dp.pge.program
  mappings:
  - name: id
    pk: True
    value: ${ m["id"] }
  - name: description
    value: ${ m["description"] }
  - name: item
    value: ${ m["item"] }

---

!!python/object:cubetl.table.MemoryTable
id: dp.pge.budget.table.organismsection

---

!!python/object:cubetl.table.MemoryTable
id: dp.pge.budget.table.program

---

!!python/object:cubetl.table.MemoryTable
id: dp.pge.budget.table.economic

---

!!python/object:cubetl.flow.Chain
id: dp.pge.process
steps:
- !!python/object:cubetl.flow.Chain
  fork: True
  steps:
  - !!python/object:cubetl.flow.Multiplier
    name: year_budget
    values: 2016, 2015, 2014, 2013, 2012, 2011, 2010, 2009, 2008  # 2013P, 2014P...
    #values: [ 2016 ]
  - !!python/object:cubetl.util.log.Log
    message: Processing general budget data for year ${ m['year_budget'] }

  # Organisms table

  - !!python/object:cubetl.flow.Chain
    fork: True
    steps:
    #- !!python/object:cubetl.table.TableClear
    #  table: !ref dp.pge.budget.table.organismsection
    - !!python/object:cubetl.csv.CsvFileReader
      path: ${ ctx.props['dir_data'] }/pge/data/${ m['year_budget'] }/estructura_organica.csv
      delimiter: ";"
    - !!python/object:cubetl.table.TableInsert
      table: !ref dp.pge.budget.table.organismsection
      mappings:
      - name: organismsection_year
        value: ${ m['year_budget'] }
      - name: organismsection_code
        value: ${ m['CENTRO GESTOR'] }
      - name: organismsection_name
        value: ${ m['DESCRIPCION LARGA'] }

  # Functional program table

  - !!python/object:cubetl.flow.Chain
    fork: True
    steps:
    #- !!python/object:cubetl.table.TableClear
    #  table: !ref dp.pge.budget.table.organismsection
    - !!python/object:cubetl.csv.CsvFileReader
      path: ${ ctx.props['dir_data'] }/pge/data/${ m['year_budget'] }/estructura_funcional.csv
      delimiter: ";"
    - !!python/object:cubetl.table.TableInsert
      table: !ref dp.pge.budget.table.program
      mappings:
      - name: program_year
        value: ${ m['year_budget'] }
      - name: program_code
        value: ${ m['PROGRAMA'] if m['PROGRAMA'] else (m['FUNCION'] if m['FUNCION'] else m['GRUPO']) }
      - name: program_name
        value: ${ m['DESCRIPCION LARGA'] }

  # Economic structure table

  - !!python/object:cubetl.flow.Chain
    fork: True
    steps:
    #- !!python/object:cubetl.table.TableClear
    #  table: !ref dp.pge.budget.table.organismsection
    - !!python/object:cubetl.csv.CsvFileReader
      path: ${ ctx.props['dir_data'] }/pge/data/${ m['year_budget'] }/estructura_economica.csv
      delimiter: ";"
    - !!python/object:cubetl.table.TableInsert
      table: !ref dp.pge.budget.table.economic
      mappings:
      - name: concept_year
        value: ${ m['year_budget'] }
      - name: concept_expenseincome
        value: ${ m['GASTO/INGRESO'] }
      - name: concept_code
        value: ${ m['CONCEPTO'] if m['CONCEPTO'] else (m['ARTICULO'] if m['ARTICULO'] else m['CAPITULO']) }
      - name: concept_name
        value: ${ m['DESCRIPCION LARGA'] }

  # Load expenses

  - !!python/object:cubetl.flow.Chain
    fork: True
    steps:

    - !ref dp.sql.transaction

    - !!python/object:cubetl.csv.CsvFileReader
      path: ${ ctx.props['dir_data'] }/pge/data/${ m['year_budget'] }/gastos.csv
      encoding: utf-8
      delimiter: ";"

    - !!python/object:cubetl.flow.Filter
      condition: ${ "/" in m['ECONOMICA'] }

    - !!python/object:cubetl.sql.cache.CachedQueryLookup
      connection: !ref dp.sql.connection
      query: |
        select sum(census) as census
        from ine_census join datemonthly on ine_census.datemonthly_id = datemonthly.id
        where year = ${ min(m['year_budget'], 2015) } and month = 1;

    - !!python/object:cubetl.script.Eval
      eval:
      - name: data
        value: null
      - name: id
        value: ${ m['EJERCICIO'] }_${ m['CENTRO GESTOR'] }_${ m['FUNCIONAL'] }_${ m['ECONOMICA'] }_${ m['ITEM'] if m['ITEM'] else 'X' }
      - name: expense_total
        value: ${ float(m['IMPORTE']) }
      - name: expense_per_person
        value: ${ float(m['IMPORTE']) / m['census'] }
      - name: organism_code
        value: ${ m['CENTRO GESTOR'][:2] }
      - name: section_code
        value: ${ m['CENTRO GESTOR'] }
      - name: program_group_code
        value: ${ m['FUNCIONAL'][:1] }
      - name: program_function_code
        value: ${ m['FUNCIONAL'][:2] }
      - name: program_program_code
        value: ${ m['FUNCIONAL'] }
      - name: concept_l1_code
        value: ${ m['ECONOMICA'][:1] }
      - name: concept_l2_code
        value: ${ m['ECONOMICA'][:2] }
      - name: concept_l3_code
        value: ${ m['ECONOMICA'] }
      - name: expenseincome
        value: G
      - name: description
        value: ${ m['DESCRIPCION'] }
      - name: item
        value: ${ m['ITEM'] }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.organismsection
      lookup:
        organismsection_year: ${ m['year_budget'] }
        organismsection_code: ${ m['organism_code'] }
      mappings:
      - name: organism_name
        value: ${ organismsection_name }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.organismsection
      lookup:
        organismsection_year: ${ m['year_budget'] }
        organismsection_code: ${ m['section_code'] }
      mappings:
      - name: section_name
        value: ${ organismsection_name }


    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.program
      lookup:
        program_year: ${ m['year_budget'] }
        program_code: ${ m['program_group_code'] }
      mappings:
      - name: program_group_name
        value: ${ program_name }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.program
      lookup:
        program_year: ${ m['year_budget'] }
        program_code: ${ m['program_function_code'] }
      mappings:
      - name: program_function_name
        value: ${ program_name }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.program
      lookup:
        program_year: ${ m['year_budget'] }
        program_code: ${ m['program_program_code'] }
      mappings:
      - name: program_program_name
        value: ${ program_name }


    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.economic
      lookup:
        concept_year: ${ m['year_budget'] }
        concept_expenseincome: ${ m['expenseincome'] }
        concept_code: ${ m['concept_l1_code'] }
      mappings:
      - name: concept_l1_name
        value: ${ concept_name }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.economic
      lookup:
        concept_year: ${ m['year_budget'] }
        concept_expenseincome: ${ m['expenseincome'] }
        concept_code: ${ m['concept_l2_code'] }
      mappings:
      - name: concept_l2_name
        value: ${ concept_name }

    - !!python/object:cubetl.table.cache.CachedTableLookup
      table: !ref dp.pge.budget.table.economic
      lookup:
        concept_year: ${ m['year_budget'] }
        concept_expenseincome: ${ m['expenseincome'] }
        concept_code: ${ m['concept_l3_code'] }
      mappings:
      - name: concept_l3_name
        value: ${ concept_name }


    - !ref cubetl.util.print

    - !!python/object:cubetl.olap.Store
      entity: !ref dp.pge.concept_expenseincome
      mapper: !ref dp.pge.olapmapper

    - !!python/object:cubetl.olap.Store
      entity: !ref dp.pge.concept_l1
      mapper: !ref dp.pge.olapmapper

    - !!python/object:cubetl.olap.Store
      entity: !ref dp.pge.concept_l2
      mapper: !ref dp.pge.olapmapper

    - !!python/object:cubetl.olap.Store
      entity: !ref dp.pge.concept_l3
      mapper: !ref dp.pge.olapmapper

    - !!python/object:cubetl.olap.Store
      entity: !ref dp.pge.budget
      mapper: !ref dp.pge.olapmapper

    - !ref cubetl.util.logperformance

  - !!python/object:cubetl.sql.Query
    connection: !ref dp.sql.connection
    query: |
      delete from pge_budget
      where concept_l3_id in (select distinct(concept_l3_id) from pge_budget where item != '' and year = ${ m['year_budget'] })
      and item = ''
      and year = ${ m['year_budget'] };



#                            <dict>
#                                <entry><key><value>name</value></key><value>concept_code_pad</value></entry>
#                                <entry><key><value>value</value></key><value>${ m['concept_code'] + 'x' * (5 - len(m['concept_code'])) }</value></entry>
#                            </dict>
#                            <dict>
#                                <entry><key><value>name</value></key><value>concept_l1_code</value></entry>
#                                <entry><key><value>value</value></key><value>${ m['concept_code_pad'][:1] }</value></entry>
#                            </dict>
#                            <dict>
#                                <entry><key><value>name</value></key><value>concept_l2_code</value></entry>
#                                <entry><key><value>value</value></key><value>${ m['concept_code_pad'][:2] }</value></entry>
#                            </dict>
#                            <dict>
#                                <entry><key><value>name</value></key><value>concept_l3_code</value></entry>
#                                <entry><key><value>value</value></key><value>${ m['section_code'] + "_" + m['program_code'] + "_" + m['concept_code_pad'][:3] }</value></entry>
#                            </dict>
#                            <dict>
#                                <entry><key><value>name</value></key><value>concept_l4_code</value></entry>
#                                <entry><key><value>value</value></key><value>${ m['section_code'] + "_" + m['program_code'] + "_" + m['concept_code_pad'] }</value></entry>
#                            </dict>
#
#                        </list>
#                    </property>
#                </object>
#
#                <object class="cubetl.script.Script">
#                    <property name="refs">
#                        <dict>
#                            <entry><key><value>olapmapper</value></key><ref object="dp.olapmapper.budget.general" /></entry>
#                            <entry><key><value>fact_budget</value></key><ref object="dp.fact.budget.general" /></entry>
#                            <entry><key><value>dim_program</value></key><ref object="dp.dim.budget.program" /></entry>
#                            <entry><key><value>dim_concept_l1</value></key><ref object="dp.dim.budget.concept.level1" /></entry>
#                            <entry><key><value>dim_concept_l2</value></key><ref object="dp.dim.budget.concept.level2" /></entry>
#                            <entry><key><value>dim_concept_l3</value></key><ref object="dp.dim.budget.concept.level3" /></entry>
#                            <entry><key><value>dim_concept_l4</value></key><ref object="dp.dim.budget.concept.level4" /></entry>
#                        </dict>
#                    </property>
#              <property name="code"><value><![CDATA[
#
#conn = refs["olapmapper"].entity_mapper(refs["fact_budget"])._sqltable.connection.connection()
#
## Insert concept
#if (m["concept_code"] == ""):
#    # Must be a program.
#    m["program_program"] = m["concept"]
#    program_id = refs["olapmapper"].entity_mapper(refs["dim_program"]).store(ctx, m)
#
#elif (len(m["concept_code"]) == 1):
#
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l1"]).store(
#        ctx, { "concept_l1_code": m["concept_l1_code"] , "concept_l1_name": m["concept"] } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l2"]).store(
#        ctx, { "concept_l2_code": m["concept_l2_code"] , "concept_l2_name": "-" } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l3"]).store(
#        ctx, { "concept_l3_code": m["concept_l3_code"] , "concept_l3_name": "-" } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l4"]).store(
#        ctx, { "concept_l4_code": m["concept_l4_code"] , "concept_l4_name": "-" } )
#
#elif (len(m["concept_code"]) == 2):
#
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l2"]).store(
#        ctx, { "concept_l2_code": m["concept_l2_code"] , "concept_l2_name": m["concept"] } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l3"]).store(
#        ctx, { "concept_l3_code": m["concept_l3_code"] , "concept_l3_name": "-" } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l4"]).store(
#        ctx, { "concept_l4_code": m["concept_l4_code"] , "concept_l4_name": "-" } )
#
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-1]))
#
#elif (len(m["concept_code"]) == 3):
#
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l3"]).store(
#        ctx, { "concept_l3_code": m["concept_l3_code"] , "concept_l3_name": m["concept"] } )
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l4"]).store(
#        ctx, { "concept_l4_code": m["concept_l4_code"] , "concept_l4_name": "-" } )
#
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-2]))
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-1]))
#
#else:
#
#    refs["olapmapper"].entity_mapper(refs["dim_concept_l4"]).store(
#        ctx, { "concept_l4_code": m["concept_l4_code"] , "concept_l4_name": m["concept"] } )
#
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-4]))
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-3]))
#    conn.execute("delete from dvmi_budget_general where id = '%s'" % (m["id"][:-2]))
#
#              ]]></value></property>
#          </object>
#
#                <object class="cubetl.sql.QueryLookup">
#                    <property name="connection" ref="dp.sql.connection" />
#                    <property name="query"><value>
#                        select count(*) as children_count from dvmi_budget_general where id like '${ m["id"] }%' and not id = '${ m["id"] }';
#                    </value></property>
#                </object>
#                <object class="cubetl.flow.Filter" scope="singleton">
#                    <property name="condition"><value>${ m['children_count'] == 0 }</value></property>
#                </object>
#
#                <object class="cubetl.sql.cache.CachedQueryLookup">
#                    <property name="connection" ref="dp.sql.connection" />
#                    <property name="query"><value>
#                        select sum(census) as census_year from ine_census where year = '${ m["year_census"] }'
#                    </value></property>
#                </object>
#
#                <object class="cubetl.table.cache.CachedTableLookup">
#                    <property name="table" ref="dp.table.budget.general.organisms" />
#                    <property name="lookup" >
#                        <dict>
#                            <entry><key><value>organism_code</value></key><value>${ m["organism_code"] }</value></entry>
#                        </dict>
#                    </property>
#                    <property name="default" >
#                        <dict>
#                            <entry><key><value>organism_name</value></key><value>Desconocido (${ m["organism_code"] })</value></entry>
#                        </dict>
#                    </property>
#                </object>
#
#                <object class="cubetl.table.cache.CachedTableLookup">
#                    <property name="table" ref="dp.table.budget.general.sections" />
#                    <property name="lookup" >
#                        <dict>
#                            <entry><key><value>section_code</value></key><value>${ m["section_code"] }</value></entry>
#                        </dict>
#                    </property>
#                    <property name="default" >
#                        <dict>
#                            <entry><key><value>section_name</value></key><value>Desconocido (${ m["section_code"] })</value></entry>
#                        </dict>
#                    </property>
#                </object>
#
#                <object class="cubetl.script.Eval">
#                    <property name="eval">
#                        <list>
#                            <dict>
#                                <entry><key><value>name</value></key><value>expense_per_person</value></entry>
#                                <entry><key><value>value</value></key><value>${ m["expense_total"] / m["census_year"] }</value></entry>
#                            </dict>
#            </list>
#          </property>
#        </object>
#
#                <object class="cubetl.util.Assert">
#                    <property name="eval" value="${ text.extract_number(m['year_budget']) == text.extract_number(m['year_file']) }" />
#                    <property name="message" value="Error: year_budget ${ m['year_budget'] } does not match ${ m['year_file'] }" />
#                </object>
#
#                <ref object="cubetl.util.print" />
#
#          <object class="cubetl.olap.Store" >
#              <property name="entity" ref="dp.fact.budget.general" />
#              <property name="mapper" ref="dp.olapmapper.budget.general" />
#          </object>
#
#        <ref object="dp.node.logperformance" />
#
#      </list>
#    </property>
#  </object>
#
#</objects>
